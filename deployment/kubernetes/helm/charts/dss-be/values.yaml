# Default values for dss-be.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

#Add new env as array value with name/value field. Keep one tab indentation.
envs: []
  # - name: MAX_FILE_SIZE
  #   value: 3000MB
  # - name: VAULT_TOKEN
  #   valueFrom:
  #     secretKeyRef:
  #       key: vaultToken
  #       name: storage-be

secret: []
  # - key: vaultToken
  #   value: ""

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: dss-be
namespace: dss

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""


podAnnotations: {}

podSecurityContext: 
  runAsUser: 1000

containerPort: 7175

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

## Inject the application environment variable from vault service
# If you enable vault injector, the environment variables specified above will be will be override from vault
vaultInjector:
  enable: false
  annotations:
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/role: 'dna'
    vault.hashicorp.com/agent-pre-populate-only: 'true'
    vault.hashicorp.com/agent-inject-secret-envvar: 'kv/dna/kubernetesSecret/dssService'
    vault.hashicorp.com/agent-inject-template-envvar: | 
      {{- with secret "kv/dna/kubernetesSecret/dssService" -}}
        {{- range $k, $v := .Data.data }}
            export {{ $k }}="{{ $v }}"
        {{- end }}
      {{- end }}        
  saName: "default"
  jarName: "dss-lib*.jar"

podDisruptionBudget:
  enabled: false
  # Uncomment only one of the following when enabled is set to true
  # maxUnavailable: "50%"
  # minAvailable: "50%"