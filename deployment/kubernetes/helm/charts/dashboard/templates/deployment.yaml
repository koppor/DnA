apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-backend
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Chart.Name }}-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Chart.Name }}-backend
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}-backend
      {{- if .Values.vaultInjector.enable }}      
      {{- with .Values.vaultInjector.annotations }}
      annotations:
        {{- toYaml . | nindent 9 }}
      {{- end }}
      {{- end }}
    spec:
      {{- if .Values.vaultInjector.enable }}         
      serviceAccountName: {{ .Values.vaultInjector.saName }}
      {{- end }}       
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              name: {{ .Chart.Name }}-backend
      containers:
        - name: {{ .Chart.Name }}-service
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          {{- if .Values.vaultInjector.enable }}           
          command: ["/bin/sh", "-c"]
          args: ['source /vault/secrets/envvar && java -jar /{{ .Values.vaultInjector.jarName }}']
          {{ else }}
          env:
            - name: API_DB_URL
              value: {{ .Values.dbUrl }}
            - name: API_DB_USER
              valueFrom:
                secretKeyRef:
                  key: postgres.app.username
                  name: {{ .Values.secret.name }}
            - name: API_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: postgres.app.password
                  name: {{ .Values.secret.name }}
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                 key: jwt.secret.key
                 name: {{ .Values.secret.name }} 
            - name: DNA_URI
              value: {{ .Values.appUrl }}
            - name: DNA_AUTH_ENABLE
              value: {{ .Values.enableAuth | quote}}
            - name: LOGGING_PATH
              value: {{ .Values.loggingPath | quote }}
            - name: LOGGING_ENVIRONMENT
              value: {{ .Values.loggingEnvironment | quote }}
            - name: FLYWAY_ENABLED
              value: {{ .Values.flywayBaseline | quote }}
            - name: FLYWAY_BASELINE_ON_MIGRATE
              value: {{ .Values.flywayBaselineOnMigrate | quote }}
            - name: FLYWAY_BASELINEVERSION
              value: {{ .Values.flywayBaselineVersion | quote }}
            - name: FLYWAY_SCHEMA
              value: {{ .Values.flywaySchema | quote }}
            - name: CORS_ORIGIN_URL
              value: {{ .Values.corsOriginUrl | quote }}
            - name: NAAS_BROKER
              value: {{ .Values.naasBroker }} 
          {{- end }}         
          ports:
            - containerPort: {{ .Values.containerPort }}
              name: api
              protocol: TCP
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.probes.livenessProbe.path }}
              port: {{ .Values.probes.livenessProbe.port }}
              
          readinessProbe:
            # initialDelaySeconds: 60
            # Max time it will take to success the readiness probe .
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.probes.readinessProbe.path }}
              port: {{ .Values.probes.readinessProbe.port }}   
      securityContext:
        runAsUser: 1000
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
