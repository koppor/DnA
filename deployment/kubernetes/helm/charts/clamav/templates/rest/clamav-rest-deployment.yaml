apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.backend.name }}
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Values.app.backend.name }}
spec:
  replicas: {{ .Values.app.backend.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Values.app.backend.name }}
  template:
    metadata:
      labels:
        name: {{ .Values.app.backend.name }}
      {{- if .Values.vaultInjector.enable }}      
      {{- with .Values.vaultInjector.annotations }}
      annotations:
        {{- toYaml . | nindent 9 }}
      {{- end }}
      {{- end }}    
    spec:
      {{- if .Values.vaultInjector.enable }}         
      serviceAccountName: {{ .Values.vaultInjector.saName }}
      {{- end }}   
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              name: {{ .Values.app.backend.name }}       
      containers:
        - name: clamd-rest
          image: {{ .Values.app.backend.image }} 
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.vaultInjector.enable }}           
          command: ["/bin/sh", "-c"]
          args: ['source /vault/secrets/envvar && java -jar /{{ .Values.vaultInjector.jarName }}']
          {{ else }}       
          env:
            - name: CLAMAV_BACKEND_URL
              value: {{ .Values.app.backend.config.clamav_backend_url }}
            - name: CLAMAV_BACKEND_PORT
              value: {{ .Values.app.backend.config.clamav_backend_port | quote }}
            - name: MAX_FILE_SIZE
              value: {{ .Values.app.backend.config.max_file_size | quote }}
            - name: MAX_REQUEST_SIZE
              value: {{ .Values.app.backend.config.max_request_size | quote }}
            - name: API_REQUEST_LIMIT
              value: {{ .Values.app.backend.config.api_request_limit | quote }}
            - name: WITH_IN
              value: {{ .Values.app.backend.config.with_in | quote }}
            - name: TIME_UNIT
              value: {{ .Values.app.backend.config.time_unit | quote }}
            - name: RESTRICTED_URL_PATTERN
              value: {{ .Values.app.backend.config.restricted_url_pattern | quote }}
            - name: ONEAPI_BASICAUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  key: onapi.basicauth.token
                  name: {{ .Values.app.backend.secrets.name }}
            - name: LOGGING_PATH
              value: {{ .Values.app.backend.config.loggingPath | quote }}
            - name: LOGGING_ENVIRONMENT
              value: {{ .Values.app.backend.config.loggingEnvironment | quote }}
            - name: CORS_ORIGIN_URL
              value: {{ .Values.app.backend.config.corsOriginUrl | quote }}
            - name: API_DB_URL
              value: {{ .Values.app.backend.config.dbUri }}
            - name: API_DB_USER
              valueFrom:
                secretKeyRef:
                  key: postgres.app.username
                  name: {{ .Values.app.backend.secrets.name }}
            - name: API_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: postgres.app.password
                  name: {{ .Values.app.backend.secrets.name }}
            - name: FLYWAY_ENABLED
              value: {{ .Values.app.backend.config.flywayEnabled | quote }}
            - name: FLYWAY_BASELINE_ON_MIGRATE
              value: {{ .Values.app.backend.config.flywayBaselineOnMigrate | quote }}
            - name: FLYWAY_BASELINEVERSION
              value: {{ .Values.app.backend.config.flywayBaselineVersion | quote }}
            - name: FLYWAY_SCHEMA
              value: {{ .Values.app.backend.config.flywaySchema | quote }}
            - name: VAULT_HOST
              value: {{ .Values.app.backend.config.vaultHost }}
            - name: VAULT_PORT
              value: {{ .Values.app.backend.config.vaultPort | quote }}
            - name: VAULT_SCHEME
              value: http
            - name: VAULT_AUTHENTICATION
              value: TOKEN
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  key: vault.root.token
                  name: {{ .Values.app.backend.secrets.name }}
            - name: VAULT_MOUNTPATH
              value: kv
            - name: DNA_URI
              value: {{ .Values.app.backend.config.appUrl }}
            - name: DNA_AUTH_ENABLE
              value: {{ .Values.app.backend.config.enableAuth | quote}}
            - name: DNA_VERIFY_LOGIN_API
              value: {{ .Values.app.backend.config.verifyLoginApi | quote }}
            - name: DNA_UNSUBSCRIBE_MALWARE_SCAN_API
              value: {{ .Values.app.backend.config.unscribeMalwareScanApi | quote }} 
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                 key: jwt.secret.key
                 name: {{ .Values.app.backend.secrets.name }}
            - name: NAAS_BROKER
              value: {{ .Values.app.backend.config.naas_broker }}        
          
          {{- end }}
          ports:
            - containerPort: 8181
              name: api
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: {{ .Values.app.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.app.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.app.probes.periodSeconds }}
            failureThreshold: {{ .Values.app.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.app.probes.livenessProbe.path }}
              port: {{ .Values.app.probes.livenessProbe.port }}
                
          readinessProbe:
            # initialDelaySeconds: 60
            # Max time it will take to success the readiness probe .
            timeoutSeconds: {{ .Values.app.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.app.probes.periodSeconds }}
            failureThreshold: {{ .Values.app.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.app.probes.readinessProbe.path }}
              port: {{ .Values.app.probes.readinessProbe.port }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory | quote }}
              cpu: {{ .Values.resources.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.limits.memory | quote }}
              cpu: {{ .Values.resources.limits.cpu | quote }}
          # volumeMounts:
          #   - mountPath: /var/lib/clamav
          #     name: avdata
          # livenessProbe:
          #   exec:
          #     command:
          #     - /readyness.sh
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 2
      securityContext:
        runAsUser: {{ .Values.securityContext.runasUser }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      # volumes:
      #   - name: avdata
      #     persistentVolumeClaim:
      #       claimName: clamav-db-dir
