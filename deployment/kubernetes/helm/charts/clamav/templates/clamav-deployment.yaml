apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    name: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.image.replicaCount }}
  selector:
    matchLabels:
      name: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        name: {{ .Chart.Name }}
    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              name: {{ .Chart.Name }}
      containers:
        - name: clamd
          image: {{ .Values.image.repo }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # env:
          #   - name: UPDATE
          #     value: "false"
          ports:
            - containerPort: 3310
              name: api
              protocol: TCP

   
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory | quote }}
              cpu: {{ .Values.resources.requests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.limits.memory | quote }}
              cpu: {{ .Values.resources.limits.cpu | quote }}
          # volumeMounts:
          #   - mountPath: /var/lib/clamav
          #     name: avdata
          # livenessProbe:
          #   exec:
          #     command:
          #     - /readyness.sh
          #   initialDelaySeconds: 20
          #   timeoutSeconds: 2
        # - name: freshclam
        #   image: ""
        #   imagePullPolicy: Always
        #   env:
        #     - name: UPDATE_ONLY
        #       value: "true"
        #   resources: {}
        #   volumeMounts:
        #   - mountPath: /var/lib/clamav
        #     name: avdata
        #   livenessProbe:
        #     exec:
        #       command:
        #       - /readyness.sh
        #     initialDelaySeconds: 20
        #     timeoutSeconds: 2
      securityContext:
        runAsUser: {{ .Values.securityContext.runasUser }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      # volumes:
      #   - name: avdata
      #     persistentVolumeClaim:
      #       claimName: clamav-db-dir

