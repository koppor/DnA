# Default values for clamav.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

appName: clamav
namespace: clamav
securityContext:
  runasUser: 1000 
app:
  backend:
    name: clamav-rest
    image: ""
    replicaCount: 1
    secrets:
      name: oneapi-secrets
      onapiBasicAuthToken: ""
      jwtSecretKey: ""
      appDBUserName: malware
      appDBPassword: ""
    config:
      clamav_backend_url: clamav-service
      clamav_backend_port: 3310
      max_file_size: 10MB
      max_request_size: 11MB
      api_request_limit: 20
      with_in: 2
      time_unit: seconds
      auth_api_host: ""
      restricted_url_pattern: /api/v1/scan.*
      loggingPath: /tmp/clamav/log
      loggingEnvironment: dev
      corsOriginUrl: ""
      dbUri: ""
      flywayEnabled: true
      flywayBaselineOnMigrate: true
      flywayBaselineVersion: 0
      flywaySchema: public
      vaultHost: ""
      vaultPort: ""
      appUrl: ""
      enableAuth: ""
      verifyLoginApi: /api/verifyLogin
      unscribeMalwareScanApi: /api/malwarescan/unsubscribe/
      naas_broker: ""

  vault:
    secret:
      rootToken: ""
  

  probes:
    initialDelaySeconds: 60
    timeoutSeconds: 10
    periodSeconds: 10
    failureThreshold: 3
    livenessProbe:
      path: /actuator/health/liveness
      port: api
    
    readinessProbe:
      path: /actuator/health/readiness
      port: api

image: 
  repo: ""
  replicaCount: 1
  pullPolicy: Always

ingress:
  enabled: false
  host: ""
  certificateIssuer: ""
  prefix: ""
  annotations:
    traefik.frontend.rule.type: PathPrefix
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: ""

imagePullSecret: 
  name: harbor-pull-secrets

Storage:
  storageClass: cinder
  accessModes: ReadWriteOnce
  size: 5G

resources:
  requests:
    memory: "3000Mi"
    cpu: "500m"
  limits:
    memory: "3000Mi"
    cpu: "500m"

vault:
  secret:
    rootToken: ""

## Inject the application environment variable from vault service
# If you enable vault injector, the environment variables specified above will be will be override from vault
vaultInjector:
  enable: false
  annotations:
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/role: 'dna'
    vault.hashicorp.com/agent-pre-populate-only: 'true'
    vault.hashicorp.com/agent-inject-secret-envvar: 'kv/dna/kubernetesSecret/malwareService'
    vault.hashicorp.com/agent-inject-template-envvar: | 
      {{- with secret "kv/dna/kubernetesSecret/malwareService" -}}
        {{- range $k, $v := .Data.data }}
            export {{ $k }}="{{ $v }}"
        {{- end }}
      {{- end }}
  saName: "default"
  jarName: "malwarescan-lib*.jar"  


podDisruptionBudget:
  enabled: false
  # Uncomment only one of the following when enabled is set to true
  # maxUnavailable: "50%"
  # minAvailable: "50%"