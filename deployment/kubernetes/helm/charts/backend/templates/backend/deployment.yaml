apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}
    zone: web
spec:
  replicas: {{ .Values.app.backend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        zone: web
        app: {{ .Release.Name }}
      {{- if .Values.vaultInjector.enable }}      
      {{- with .Values.vaultInjector.annotations }}
      annotations:
        {{- toYaml . | nindent 9 }}
      {{- end }}
      {{- end }}       
    spec:
      {{- if .Values.vaultInjector.enable }}         
      serviceAccountName: {{ .Values.vaultInjector.saName }}
      {{- end }}      
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}        
      containers:
        - name: backend
          image: {{ .Values.app.backend.image }}
          imagePullPolicy: Always
          {{- if .Values.vaultInjector.enable }}           
          command: ["/bin/sh", "-c"]
          args: ['source /vault/secrets/envvar && java -jar /{{ .Values.vaultInjector.jarName }}']
          {{ else }}        
          env:
            - name: ITSMM
              value: {{ .Values.app.backend.config.enableItsmm | quote }}
            - name: JUPYTER_NOTEBOOK
              value: {{ .Values.app.backend.config.enableJupyterNotebook | quote }}
            - name: DATAIKU
              value: {{ .Values.app.backend.config.enableDataiku | quote }}
            - name: ATTACHMENT_MALWARE_SCAN
              value: {{ .Values.app.backend.config.enableAttachmentScan | quote }}
            - name: DRD_INTERNAL_USER_ENABLED
              value: {{ .Values.app.backend.config.enableInternalUser | quote }}            
            - name: REDIRECT_URL
              value: {{ .Values.app.backend.config.redirectUrl }}
            - name: API_DB_URL
              value: {{ .Values.app.backend.config.dbUri }}
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  key: oidc.client.secret
                  name: {{ .Values.app.backend.secrets.name }}
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  key: oidc.client.id
                  name: {{ .Values.app.backend.secrets.name }}
            - name: OIDC_USER_INFO_URL
              value: {{ .Values.app.backend.config.oidcUserInfoUrl }}
            - name: OIDC_TOKEN_INTROSPECTION_URL
              value: {{ .Values.app.backend.config.oidcTokenIntrospectionUrl }}
            - name: OIDC_TOKEN_REVOCATION_URL
              value: {{ .Values.app.backend.config.oidcTokenRevocationUrl }}
            - name: OIDC_PROVIDER
              value: {{ .Values.app.backend.config.oidcProvider | quote }}
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: jwt.secret.key
                  name: {{ .Values.app.backend.secrets.name }}
            - name: INTERNAL_USER_REQUEST_URL
              value: {{ .Values.app.backend.config.internalUserRequestUrl }}
            - name: INTERNAL_USER_CERT_PASS
              valueFrom:
                secretKeyRef:
                  key: drd.cert.password
                  name: {{ .Values.app.backend.secrets.name }}
            - name: INTERNAL_USER_CERT_FILE
              value: {{ .Values.app.backend.config.internalCertFile }}
            - name: INACTIVE_SOLUTION_DURATION_YRS
              value: "2"
            - name: OIDC_DISABLED
              value: {{ .Values.app.backend.config.oidcDisabled | quote }}
            - name: API_DB_USER
              valueFrom:
                secretKeyRef:
                  key: postgres.app.username
                  name: {{ .Values.app.backend.secrets.name }}
            - name: API_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: postgres.app.password
                  name: {{ .Values.app.backend.secrets.name }}
            - name: S3_EP_URL
              value: {{ .Values.app.backend.config.s3Url}}
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: s3.access.key
                  name: {{ .Values.app.backend.secrets.name }}
            - name: S3_BUCKET_NAME
              value: {{ .Values.app.backend.config.s3BucketName }}
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  key: s3.secret.key
                  name: {{ .Values.app.backend.secrets.name }}
            - name: S3_MAX_PARALLEL_UPLOADTHREADS
              value: "20"
            - name: S3_MIN_FILESIZE
              value: "1024"
            - name: S3_MAX_FILESIZE
              value: "5242880"
            - name: CORS_ORIGIN_URL
              value: {{ .Values.app.backend.config.corosOriginUrl | quote }}
            - name: JUPYTER_NOTEBOOK_BASEURI
              value: {{ .Values.app.backend.config.jupyterNotebookUrl }}
            - name: JUPYTER_NOTEBOOK_TOKEN
              valueFrom:
                secretKeyRef:
                  key: notebook.secret.token
                  name: {{ .Values.app.backend.secrets.name }}
            - name: DATAIKU_PROD_URI
              value: {{ .Values.app.backend.config.dataikuProdUri }}
            - name: DATAIKU_PROD_API_KEY
              valueFrom:
                secretKeyRef:
                  key: dataiku.prod.apikey
                  name: {{ .Values.app.backend.secrets.name }}
            - name: DATAIKU_PROD_ADMIN_GROUP
              value: {{ .Values.app.backend.config.dataikuProdAdminGroup }}
            - name: DATAIKU_TRAINING_URI
              value: {{ .Values.app.backend.config.dataikutraininguri }}
            - name: DATAIKU_TRAINING_API_KEY
              valueFrom:
                secretKeyRef:
                  key: dataiku.training.apikey
                  name: {{ .Values.app.backend.secrets.name }}
            - name: DATAIKU_TRAINING_ADMIN_GROUP
              value: {{ .Values.app.backend.config.dataikuTrainingAdminGroup }}
            - name: APAC_CORPDIR
              value: {{ .Values.app.backend.config.apacCorpDir }}    
            - name: EMEA_CORPDIR
              value: {{ .Values.app.backend.config.emeaCorpDir }}    
            - name: DATAIKU_USER_ROLE_URI_PATH
              value: {{ .Values.app.backend.config.dataikuUserRoleUriPath }}    
            - name: DATAIKU_PERMISSION_URI_PATH
              value: {{ .Values.app.backend.config.dataikuPermissionUriPath }}                                              
            - name: AVSCAN_URI
              value: {{ .Values.app.backend.config.avscanUri }}
            - name: AVSCAN_APP_ID
              value: {{ .Values.app.backend.config.avscanAppId }}
            - name: NAAS_BROKER
              value: {{ .Values.app.backend.config.naasBroker }}
            - name: LOGGING_ENVIRONMENT
              value: {{ .Values.app.backend.config.loggingEnvironment | quote }}
            - name: LOGGING_PATH
              value: {{ .Values.app.backend.config.loggingPath | quote }}
            - name: DATAIKU_PROJECTS_URI_PATH
              value: {{ .Values.app.backend.config.dataikuProjectUri | quote }}
            - name: AVSCAN_API_KEY
              valueFrom:
                secretKeyRef:
                  key: avscan.apikey
                  name: {{ .Values.app.backend.secrets.name }}
            - name: FLYWAY_ENABLED
              value: {{ .Values.app.backend.config.flywayBaseline | quote }}
            - name: FLYWAY_BASELINE_ON_MIGRATE
              value: {{ .Values.app.backend.config.flywayBaselineOnMigrate | quote }}
            - name: FLYWAY_BASELINEVERSION
              value: {{ .Values.app.backend.config.flywayBaselineVersion | quote }}
            - name: FLYWAY_SCHEMA
              value: {{ .Values.app.backend.config.flywaySchema | quote }}
            - name: JWT_TOKEN_EXPIRY_TIME_IN_MIN
              value: "90"   
            - name: DASHBOARD_URI
              value: {{ .Values.app.backend.config.dashboardUri }}
            - name: AVSCAN_SUBSCRIPTION_PROVISION_API
              value: {{ .Values.app.backend.config.avscanSubsProvisionAPI }}
            - name: AVSCAN_UPLOAD_API
              value: {{ .Values.app.backend.config.avscanUploadApi }} 
            - name: DATASOURCE_BULKCREATE_API_ACCESS_TOKEN
              value: {{ .Values.app.backend.config.dataSourceBulkCreateApiAccessToken }}               
          {{- end }}  
          ports:
            - containerPort: 7171
          resources: {}
          livenessProbe:
            initialDelaySeconds: {{ .Values.app.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.app.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.app.probes.periodSeconds }}
            failureThreshold: {{ .Values.app.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.app.probes.livenessProbe.path }}
              port: {{ .Values.app.probes.livenessProbe.port }}
              
          readinessProbe:
            # initialDelaySeconds: 120
            # Max time it will take to success the readiness probe .
            timeoutSeconds: {{ .Values.app.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.app.probes.periodSeconds }}
            failureThreshold: {{ .Values.app.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.app.probes.readinessProbe.path }}
              port: {{ .Values.app.probes.readinessProbe.port }} 
      securityContext:
        runAsUser: 1000
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}