apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Release.Name }}-frontend
    zone: web
    
spec:
  replicas: {{ .Values.appFrontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-frontend
  template:
    metadata:
      labels:
        zone: web
        app: {{ .Release.Name }}-frontend
      {{- if .Values.vaultInjector.enable }}      
      {{- with .Values.vaultInjector.annotations }}
      annotations:
        {{- toYaml . | nindent 9 }}
      {{- end }}
      {{- end }}
    spec:
      {{- if .Values.vaultInjector.enable }}         
      serviceAccountName: {{ .Values.vaultInjector.saName }}
      {{- end }}       
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app: {{ .Release.Name }}-frontend
      containers:
        - image: {{ .Values.appFrontend.image }}
          imagePullPolicy: Always
          {{- if .Values.vaultInjector.enable }}           
          command: ["/bin/sh", "-c"]
          args: ["cp /vault/secrets/config.js /usr/share/nginx/html/config.js && nginx -c /opt/bitnami/nginx/conf/nginx.conf -g 'daemon off;'"]
          {{- end }}       
          name: frontend
          ports:
            - containerPort: 3000
          livenessProbe:
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            exec:
              command:
                - /bin/bash
                - -c
                - "[ -f /opt/bitnami/nginx/tmp/nginx.pid ]"
              
          readinessProbe:
            # initialDelaySeconds: 30
            # Max time it will take to success the readiness probe .
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
            httpGet:
              path: {{ .Values.probes.readinessProbe.path }}
              port: {{ .Values.probes.readinessProbe.port }}  
          volumeMounts:
            - name: {{ .Release.Name }}-frontend-configmap-ngnix
              mountPath: /opt/bitnami/nginx/conf/nginx.conf
              subPath: nginx.conf
            {{- if not .Values.vaultInjector.enable }} 
            - name: {{ .Release.Name }}-frontend-configmap-configjs
              mountPath: /usr/share/nginx/html/config.js
              subPath: config.js  
            {{- end }}                
          resources: {}
      securityContext:
        runAsUser: 1001
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      volumes:
        - name: {{ .Release.Name }}-frontend-configmap-ngnix
          configMap:
            name: {{ .Release.Name }}-frontend-configmap 
        {{- if not .Values.vaultInjector.enable }}        
        - name: {{ .Release.Name }}-frontend-configmap-configjs
          configMap:
            name: {{ .Release.Name }}-frontend-configmap  
        {{- end }}                    