# LICENSE START
# 
# MIT License
# 
# Copyright (c) 2019 Daimler TSS GmbH
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
# 
# LICENSE END 
#
#-----------------------------------------------------------------------------------------------------
#  **
#  ** File Name  : AppSubscription.yaml
#  **
#  ** Module     : core
#  ** 

#  -------------------------------------------------------------------------------------------------------
#
#  CHANGE HISTORY
#
#  Created By         :  KURAHU
#
#  Bug Number         :  
#  Changed By         :  
#  Change Description :  
#  Change On          :  
#  Search String      :  
#  
#  -------------------------------------------------------------------------------------------------------
  

swagger: "2.0"
info:
 version: "1.0.0"
 title: "Core Subscription Service"
host: "localhost:7171"
basePath: "/api/1.0"
consumes:
 - "application/json"
produces:
 - "application/json"
tags:
 - name: "subscribe"
   description: "This service is used to subscribe various application available on DnA plateform."

schemes:
- "https"

paths:

# path to subscribe a new application
#
#  supported http methods GET, POST and DELETE 
#
# path example ../subscribe

 /subscription:
  post:
   tags:
    - "subscribe"
   summary: "Subscribe a new application."
   description: "Subscribe a new application and create unique key which will be used in access services on DnA platform."
   operationId: "subscribeApplication"
   parameters:
    - name: "subscriptionRequestVO" 
      in: "body" 
      description: "Request Body that contains data required for subscribe a new application" 
      required: true
      schema:
       $ref: "#/definitions/SubscriptionRequestVO"
   responses:
    200: 
     description: "Returns message of succes or failure " 
     schema:
       $ref: "#/definitions/SubscriptionResponseVO"
    400:
     description: "Bad Request"
     schema:
       $ref: "#/definitions/GenericMessage"
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"
  get:
   tags:
    - "subscribe"
   summary: "Get all subscribed application."
   description:  "Get all subscribed application. This endpoints will be used to Get all subscribed application records."
   operationId: "getAll"
   parameters:
      - name: admin
        in: query
        description: Flag to check If user want to view in admin mode
        required: false
        type: boolean
        default: false
      - name: offset
        in: query
        description: page number from which listing of subscribed service should start. Offset. Example 2
        required: false
        type: integer
      - name: limit
        in: query
        description: page size to limit the number of subscribed service, Example 15
        required: false
        type: integer
      - name: appId
        in: query
        description: Application Id of subscribed service.
        required: false
        type: string
      - name: sortBy
        in: query
        description: Field which will be used to sort record.
        required: false
        type: string
      - name: sortOrder
        in: query
        description: Order(asc,desc) in which record will get sorted.
        required: false
        type: string    
      - name: searchTerm
        in: query
        description: searchTerm to filter subscription. SearchTerm is used to search appName and description of subscription. Example "DNA"
        required: false
        type: string  
   responses:
    200:
     description: "Returns message of succes or failure"
     schema:
       $ref: "#/definitions/SubscriptionDetailsCollection"
    204:
      description: "Fetch complete, no content found."
    400:
     description: "Bad request."
    401:
     description: "Request does not have sufficient credentials."
    403:
     description: "Request is not authorized."
    405:
     description: "Method not allowed"
    500:
     description: "Internal error"

  put:
   tags:
    - "subscribe"
   summary: "Update expiry days of a service subscription for a given Id."
   description: "Set expiry of a service subscription for a given identifier."
   operationId: "update"
   parameters:
     - name: "expireRequestVO"
       in: "body"
       description: "Request Body that contains data required for updating expiry of an existing subscription"
       required: true
       schema:
         $ref: "#/definitions/SubscriptionExpireRequestVO"
   responses:
     200:
       description: "Updated successfully"
       schema:
         $ref: "#/definitions/SubscriptionResponseVO"
     204:
       description: "Fetch complete, no content found."
       schema:
         $ref: "#/definitions/GenericMessage"
     400:
       description: "Bad request."
       schema:
         $ref: "#/definitions/GenericMessage"
     401:
       description: "Request does not have sufficient credentials."
     403:
       description: "Request is not authorized."
     405:
       description: "Method not allowed"
     500:
       description: "Internal error"

  # Get/Delete Subscription by intent
  #
  #  Supported http methods GET
  #
  # path example ../subscribe/{id}
 /subscription/{id}:
    get:
      tags:
        - "subscribe"
      summary: "Get Subscription for a given Id."
      description: "Get subscription for a given identifier. This endpoints will be used to get a subscription for a given identifier."
      operationId: "getById"
      parameters:
        - name: "id"
          in: "path"
          description: "Subscription ID to be fetched"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/SubscriptionVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
    delete:
      tags:
        - "subscribe"
      summary: "Delete subscription of a service for a given Id."
      description: "Delete subscription of a service for a given identifier."
      operationId: "delete"
      parameters:
        - name: "id"
          in: "path"
          description: "Subscription ID to be deleted"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/GenericMessage"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"

  # Refresh Subscription apiKey by intent
  #
  # Supported http methods GET
  #
  # path example ../subscription/{appId}/refresh
 /subscription/{appId}/refresh:
    get:
      tags:
        - "subscribe"
      summary: "Refresh Subscription apiKey for a given appId."
      description: "Refresh subscription apiKey for a given identifier. This endpoints will be used to refresh a subscription apiKey for a given identifier."
      operationId: "refreshApiKeyByAppId"
      parameters:
        - name: "appId"
          in: "path"
          description: "Subscription appId for which apiKey to be refreshed"
          required: true
          type: "string"
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/SubscriptionResponseVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"
          
  #  Update subscription for a given subscribedAppId.
  #
  #  Supported http method PUT
  #
  # path example ../subscription/provision
 /subscription/provision:
    put:
      tags:
        - "subscribe"
      summary: "Update subscription for a given subscribedAppId."
      description: "Update subscription for a given subscribedAppId."
      operationId: "updateSubscriptionByAppId"
      parameters:
        - name: "subscriptionProvisionRequestVO"
          in: "body"
          description: "Request body to update subscription"
          required: true 
          schema:
            $ref: "#/definitions/SubscriptionProvisionRequestVO"       
      responses:
        200:
          description: "Returns message of success or failure"
          schema:
            $ref: "#/definitions/SubscriptionResponseVO"
        204:
          description: "Fetch complete, no content found."
        400:
          description: "Bad request."
        401:
          description: "Request does not have sufficient credentials."
        403:
          description: "Request is not authorized."
        405:
          description: "Method not allowed"
        500:
          description: "Internal error"          
 /subscription/transparency:
   get:
     tags:
       - "subscribe"
     summary: "Number of subscribers."
     description: "Get number of subscribers. This endpoints will be used to get number of available subscribers."
     operationId: "getNumberOfSubscribers"
     responses:
       201:
         description: "Returns message of success or failure"
         schema:
           $ref: "#/definitions/TransparencyVO"
       204:
         description: "Fetch complete, no content found."
       400:
         description: "Bad request."
       401:
         description: "Request does not have sufficient credentials."
       403:
         description: "Request is not authorized."
       405:
         description: "Method not allowed"
       500:
         description: "Internal error"
definitions:
# SubscriptionDetailsVO:
#  type: object
#  properties: 
#    appId:
#     type: string
#     description: "Id of the Application"
#    appName:
#     type: string
#     description: "Name of the Application"
#    apiKey:
#     type: string
#     description: "generated apiKey"
 TransparencyVO:
    type: object
    properties:
      count:
        type: integer
        description: "Number of subscribers"
 SubscriptionResponseVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/SubscriptionVO"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"    
      
 SubscriptionDetailsCollection: 
  description: "Collection of SubscriptionVO."
  type: object
  properties:
    totalCount:
        type: integer
        description: "Total Record Count"
    data:
      type: array
      items: 
        $ref: "#/definitions/SubscriptionVO"
     
 SubscriptionVO:
  type: object
  properties:
    id:
      type: string
    appName:
      type: string
      description: "Name of the Application"
    description:
      type: string
      description: "Description"
    appId:
      type: string
      description: "Application id"
    apiKey:
      type: string
      description: "Api key to invoke service"  
    createdBy:
      type: string
      description: "Created By"
    createdDate:
      type: string
      format: date
    updatedBy:
      type: string
      description: "Updated By"
    updatedDate:
      type: string
      format: date
    recordStatus:
      type: string
      description: "Created By"  
    expireOn:
      type: string
      format: date
      description: "Date on which subscription will expire."
    lastUsedOn:
      type: string
      format: date
      description: "Last date on which subscription was used."   
    expiryDays:
      type: integer
      description: "Api key expiry days" 
    usageCount:
      type: integer
      description: "Uses Count"
    solutionId:
      type: string
      description: "Provisioned Solution Id."  
  required:
   - appName
     
 SubscriptionRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/SubscriptionVO"   
     
 ApiKeyValidationVO:
  type: object
  properties:
    appId:
     type: string
     description: "Id of the Application"
    apiKey:
     type: string
     description: "generated apiKey"
  required:
    - appId
    - apiKey       
 ApiKeyValidationRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/ApiKeyValidationVO"
        
 ApiKeyValidationResponseVO:
    type: object
    properties:
      validApiKey:
        type: boolean
        description: "if given api key is valid or not"
      data:
        $ref: "#/definitions/ApiKeyValidationVO"
      errors:
        type: array
        items:
          $ref: "#/definitions/MessageDescription"    
     
 BindingResult:
  type: object

 GenericMessage:
  type: object
  properties:
    success:
      type: string
    errors:
      type: array
      items: 
        $ref: "#/definitions/MessageDescription"
  
 MessageDescription:
  type: object
  properties:
    message: 
      type: string
      description: "error message"
      
 SubscriptionExpireVO:
    type: object
    properties:
     appId:
      type: string
      description: "Application id"
     expiryDays:
      type: integer
      description: "Api key expiry days"
     description:
      type: string
      description: "Description"
     timeZone:
      type: string
      description: "Set a timezone"
    required:
     - appId
     - expiryDays
     - timeZone
 SubscriptionExpireRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/SubscriptionExpireVO"
    required:
     - data 
     
 SubscriptionProvisionVO:
    type: object
    properties:
     currDnaSubscriptionAppId:
      type: string
      description: "Current SubscribedApp Id"
     prevDnaSubscriptionAppId:
      type: string
      description: "Previous SubscribedApp Id"
     solutionId:
      type: string
      description: "Solution Id"
      
 SubscriptionProvisionRequestVO:
    type: object
    properties:
      data:
        $ref: "#/definitions/SubscriptionProvisionVO"
    required:
     - data      
     
 CreatedByVO:
   type: object
   properties:
     id:
       type: string
       description: "ID of user"
     firstName:
       type: string
       description: "First Name of the user"
     lastName:
       type: string
       description: "Last Name of the user"
     department:
       type: string
       description: "Department of the user"
     email:
       type: string
       description: "E-Mail of the user"
     mobileNumber:
       type: string
       description: "Mobile number of the user"           
 