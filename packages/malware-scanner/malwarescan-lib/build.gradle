buildscript {
    ext {
        springBootVersion = "2.7.0"
        releaseVersion = "1.0.0"
    }
    repositories {
        mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.18.2")
		classpath("org.apache.maven.plugins:maven-dependency-plugin:3.1.2")
    }

}


plugins {
    // the plugins DSL is replacing apply plugin over time for Java-plugins. It is therefore favoured over the legacy "apply plugin:" approach
    // new changes
    id "java"
    id "eclipse"
    id "jacoco"
}

apply plugin: "io.spring.dependency-management"
apply plugin: "org.springframework.boot"
apply plugin: "maven-publish"
apply plugin: "org.hidetake.swagger.generator"

repositories {
        mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
}

group 'com.daimler.mbc.dna'
version = releaseVersion

sourceCompatibility = 1.17
targetCompatibility = 1.17
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

//__________________________________________________________//
//_____________________ SWAGGER CONFIGURATION ______________//
swaggerSources {
	
    
    scan {
        def scanYaml = "${rootDir}/malwarescan-lib/src/main/resources/api/Scan.yaml"
        def scanJson = "${rootDir}/malwarescan-lib/src/main/resources/api/Scan.json"
        inputFile = file(scanYaml)

        def ignoreFile = "${rootDir}/malwarescan-lib/src/main/resources/api/.swagger-codegen-ignore"

        code {
            language = 'spring'
            configFile = file(scanJson)
            rawOptions = ['--ignore-file-override', ignoreFile]

            components = ['models', 'apis']
            //dependsOn validation
        }
    }
    
	appSubscription {
        def appSubscriptionYaml = "${rootDir}/malwarescan-lib/src/main/resources/api/AppSubscription.yaml"
        def appSubscriptionJson = "${rootDir}/malwarescan-lib/src/main/resources/api/AppSubscription.json"
        inputFile = file(appSubscriptionYaml)

        def ignoreFile = "${rootDir}/malwarescan-lib/src/main/resources/api/.swagger-codegen-ignore"

        code {
            language = 'spring'
            configFile = file(appSubscriptionJson)
            rawOptions = ['--ignore-file-override', ignoreFile]

            components = ['models', 'apis']
            //dependsOn validation
        }
    }

}


compileJava {
    dependsOn processResources
    dependsOn swaggerSources.scan.code
    source "${swaggerSources.scan.code.outputDir}/src/main/java"
    dependsOn swaggerSources.appSubscription.code
    source "${swaggerSources.appSubscription.code.outputDir}/src/main/java"
}

sourceSets {
    unitTest {
        java { srcDir 'src/test/groovy' }
        resources { srcDir 'src/test/resources' }
        compileClasspath += sourceSets.main.runtimeClasspath
    }
    main {
	    java { srcDirs += "${swaggerSources.scan.code.outputDir}/src/main/java"}
	    java { srcDirs += "${swaggerSources.appSubscription.code.outputDir}/src/main/java"}
         
    }
}

dependencies {
	
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.4.0'

    implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '3.2.4'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream-binder-kafka', version: '3.2.4'
	implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.8.6' 
	
    implementation group: 'org.json', name: 'json', version: '20190722'

    implementation('ch.qos.logback:logback-classic:1.2.3')

    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.26'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.26'
    implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.26'

    implementation('ch.qos.logback:logback-core:1.2.3')
    implementation 'io.swagger:swagger-annotations:1.6.2'
    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.10'

    implementation group: 'org.flywaydb', name: 'flyway-core', version: '8.4.2'
    
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.5.0'
    
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.9.2'
    
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.20'
    
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-vault-config', version: '3.1.1'
    
    implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.apache.tomcat.embed:tomcat-embed-jasper:10.0.5')

    implementation('io.springfox:springfox-swagger2:3.0.0')
    implementation('io.springfox:springfox-swagger-ui:2.9.2')

    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

	
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	//implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	
    // adding dependency for rate limiting
    implementation group: 'com.giffing.bucket4j.spring.boot.starter', name: 'bucket4j-spring-boot-starter', version: '0.4.0'
    implementation('org.springframework.boot:spring-boot-starter-cache')
    implementation('org.ehcache:ehcache')

	implementation('org.springframework.boot:spring-boot-starter-aop')
	
	implementation 'commons-io:commons-io:2.9.0'
	
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: "${springBootVersion}") {
        exclude(module: 'commons-logging')
    }
    testImplementation(
            //'junit:junit:4.12',
            //'junit:junit:4.13.2',
            'org.junit.jupiter:junit-jupiter-api:5.8.0-M1',
			'org.apache.ant:ant-junit:1.10.9',
			//'org.codehaus.groovy:groovy-all:2.4.10',
			//'org.codehaus.groovy:groovy-all:3.0.7',
            'info.cukes:cucumber-java:1.2.5',
            //'io.cukes:cucumber-java:6.10.3',
            'info.cukes:cucumber-junit:1.2.5',
            //'io.cukes:cucumber-junit:6.10.3',
            //'org.glassfish.jersey.media:jersey-media-json-jackson:2.14',
            'org.glassfish:javax.json:1.0.4',
            'javax.json:javax.json-api:1.0'
    )

	implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.908')
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'xyz.capybara:clamav-client:2.0.2'
    
	repositories {
        mavenLocal()
        mavenCentral()
		gradlePluginPortal()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
    }

}
