spring:
  mvc.pathmatch.matching-strategy: ant_path_matcher
  application:
    name: dna-codeserver-service

  flyway:
    enabled: ${FLYWAY_ENABLED:false}
    baseline-on-migrate: ${FLYWAY_BASELINE_ON_MIGRATE:false}
    baselineVersion: ${FLYWAY_BASELINEVERSION:0}
    schemas: ${FLYWAY_SCHEMA:public}   
        
  jpa:
    database: POSTGRESQL
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: none

  datasource:
    hikari:
      connection-timeout: 4000
    platform: postgres
    url: ${API_DB_URL:jdbc:postgresql://localhost:5432/db}
    username: ${API_DB_USER:XXXX_user}
    password: ${API_DB_PASS:XXXX_pass}
    driverClassName: org.postgresql.Driver
    
dna:
  uri: ${DNA_URI:XXXXXX}
  dnaAuthEnable: ${DNA_AUTH_ENABLE:false}
  
jwt:
  secret:
    key: ${JWT_SECRET_KEY:XXXXXX}

server:
  port: 7979

#Cors Filter origin Domains  
allowedCorsOriginPatternUrl: ${CORS_ORIGIN_URL:http://*}

codeServer:
  gitjob.uri: ${CODE_SERVER_GITJOB_URI:XXXX}
  git.pat: ${CODE_SERVER_GIT_PIT:XXXX}
  base.uri: ${CODE_BASE_URI:XXXX}
  env.ref: ${CODE_SERVER_GIT_ENVREF:dev}

swagger.headers.authorization.token: ${SWAGGER_HEADER_AUTH:XXXXXX}
management.endpoints.web.exposure.include: loggers,health
management.endpoint.loggers.enabled: true
management.endpoint.health.probes.enabled: true
management.endpoint.health.show-details: always


logging:
  service:
    environment: ${LOGGING_ENVIRONMENT:DEV}
    path: ${LOGGING_PATH:/var/log}
  level:
    com:
      daimler:
        data:
          application: INFO
          controller.ItsmmGameController: DEBUG
    org.springframework.boot.autoconfigure.logging: INFO
    com.daimler.data.application.logging.ApplicationLoggingAspect: DEBUG
    org:
      springframework:
        web:
          client:
            RestTemplate: INFO
      hibernate:
        type:
          descriptor:
            sql: ERROR
